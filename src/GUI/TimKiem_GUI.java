/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import BUS.BAO_HANH_XE_BUS;
import BUS.KHACH_HANG_BUS;
import BUS.NHAN_VIEN_BUS;
import BUS.XE_MAY_BUS;
import DTO.BAO_HANH_XE_DTO;
import DTO.KHACH_HANG_DTO;
import DTO.NHAN_VIEN_DTO;
import DTO.XE_MAY_DTO;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.AbstractButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Admin
 */
public class TimKiem_GUI extends javax.swing.JFrame {

    /**
     * Creates new form timKiem
     */
    private KHACH_HANG_BUS khach_Hang_BUS = new KHACH_HANG_BUS();
    private XE_MAY_BUS xe_MAY_BUS = new XE_MAY_BUS();
    private NHAN_VIEN_BUS nhan_Vien_BUS = new NHAN_VIEN_BUS();

    private NHAN_VIEN_BUS nhan_VIEN_BUS = new NHAN_VIEN_BUS();

    public TimKiem_GUI() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        TableColumnModel columnModel = tblLichSuTimKiem.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(15);
        columnModel.getColumn(1).setPreferredWidth(100);

        start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        radiobtnNhanVien = new javax.swing.JRadioButton();
        radiobtnXe = new javax.swing.JRadioButton();
        cbbSearchByNhanVien = new javax.swing.JComboBox<>();
        cbbSearchByXe = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKetQuaTimKiem = new javax.swing.JTable();
        btnTim = new javax.swing.JButton();
        btnNhapLaiTimKiem = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        radiobtnKhachHang = new javax.swing.JRadioButton();
        cbbSearchByKhachHang = new javax.swing.JComboBox<>();
        btnExit = new javax.swing.JButton();
        btnChon = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblLichSuTimKiem = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        btnXoaLichSuTimKiem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 102, 51));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/Search-icon.png"))); // NOI18N
        jLabel1.setText("Tìm Kiếm");

        jLabel2.setText("Nhập từ khóa muốn tìm kiếm tại đây:");

        buttonGroup1.add(radiobtnNhanVien);
        radiobtnNhanVien.setText("Nhân viên");
        radiobtnNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiobtnNhanVienActionPerformed(evt);
            }
        });

        buttonGroup1.add(radiobtnXe);
        radiobtnXe.setText("Xe");
        radiobtnXe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiobtnXeActionPerformed(evt);
            }
        });

        cbbSearchByNhanVien.setModel(new javax.swing.DefaultComboBoxModel<>(
                new String[] { "Tên Nhân Viên", "Mã Nhân Viên", "Số Điện Thoại" }));
        cbbSearchByNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbSearchByNhanVienActionPerformed(evt);
            }
        });

        cbbSearchByXe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tên Xe", "Mã Xe", "Giá Xe" }));

        tblKetQuaTimKiem.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {
                        { null, null, null, null },
                        { null, null, null, null },
                        { null, null, null, null },
                        { null, null, null, null }
                },
                new String[] {
                        "Title 1", "Title 2", "Title 3", "Title 4"
                }));
        jScrollPane1.setViewportView(tblKetQuaTimKiem);

        btnTim.setIcon(new javax.swing.ImageIcon(
                getClass().getResource("/IMG/Custom-Icon-Design-Mono-General-2-Search.16.png"))); // NOI18N
        btnTim.setText("Tìm ");
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });

        btnNhapLaiTimKiem.setIcon(new javax.swing.ImageIcon(
                getClass().getResource("/IMG/Bootstrap-Bootstrap-Bootstrap-arrow-return-right.16.png"))); // NOI18N
        btnNhapLaiTimKiem.setText("Nhập lại");
        btnNhapLaiTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhapLaiTimKiemActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 204));
        jLabel3.setText("KẾT QUẢ TÌM KIẾM");

        buttonGroup1.add(radiobtnKhachHang);
        radiobtnKhachHang.setText("Khách Hàng");

        cbbSearchByKhachHang.setModel(new javax.swing.DefaultComboBoxModel<>(
                new String[] { "Mã Khách Hàng", "Tên Khách Hàng", "Số Điện Thoại" }));

        btnExit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnExit.setIcon(new javax.swing.ImageIcon(
                getClass().getResource("/IMG/Oxygen-Icons.org-Oxygen-Actions-window-close.16.png"))); // NOI18N
        btnExit.setText("EXIT");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnChon.setText("Chọn");
        btnChon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonActionPerformed(evt);
            }
        });

        tblLichSuTimKiem.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {

                },
                new String[] {
                        "STT", "Thời Gian Tìm", "Thuộc Tính", "Tìm Kiếm Theo", "Từ Khóa Nhập"
                }) {
            boolean[] canEdit = new boolean[] {
                    false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        tblLichSuTimKiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLichSuTimKiemMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblLichSuTimKiem);
        tblLichSuTimKiem.getAccessibleContext().setAccessibleName("");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 51, 204));
        jLabel4.setText("Lịch Sử Tìm Kiếm");

        btnXoaLichSuTimKiem.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnXoaLichSuTimKiem.setForeground(new java.awt.Color(255, 0, 0));
        btnXoaLichSuTimKiem.setIcon(new javax.swing.ImageIcon(
                getClass().getResource("/IMG/Oxygen-Icons.org-Oxygen-Actions-window-close.16.png"))); // NOI18N
        btnXoaLichSuTimKiem.setText("Xóa Lich Sử Tìm Kiếm");
        btnXoaLichSuTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaLichSuTimKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 107,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(511, 511, 511)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 344,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addGap(389, 389, 389))
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 234,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1)
                                .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(cbbSearchByNhanVien,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(btnChon)
                                                                .addGap(88, 88, 88)
                                                                .addComponent(radiobtnNhanVien)))
                                                .addGap(42, 42, 42)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(radiobtnXe)
                                                        .addComponent(cbbSearchByXe,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(89, 89, 89)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(radiobtnKhachHang)
                                                        .addComponent(cbbSearchByKhachHang,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addGap(54, 54, 54)
                                                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 321,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(btnNhapLaiTimKiem)
                                        .addComponent(btnTim, javax.swing.GroupLayout.PREFERRED_SIZE, 94,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnXoaLichSuTimKiem)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 540,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 49,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel1))
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(txtTimKiem,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(btnTim, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(radiobtnNhanVien)
                                                        .addComponent(radiobtnXe)
                                                        .addComponent(radiobtnKhachHang)
                                                        .addComponent(btnChon))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout
                                                                .createParallelGroup(
                                                                        javax.swing.GroupLayout.Alignment.BASELINE)
                                                                .addComponent(cbbSearchByNhanVien,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(cbbSearchByXe,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(layout
                                                                .createParallelGroup(
                                                                        javax.swing.GroupLayout.Alignment.BASELINE)
                                                                .addComponent(cbbSearchByKhachHang,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(btnNhapLaiTimKiem,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE, 33,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 379,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(btnXoaLichSuTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 37,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 355,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)));

        pack();
    }// </editor-fold>

    private void radiobtnNhanVienActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void radiobtnXeActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    int dem = 0;

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {
        // lấy cột đầu tiên
        DefaultTableModel model = (DefaultTableModel) tblKetQuaTimKiem.getModel();
        model.setRowCount(0);
        DefaultTableModel modelLichSuTimKiem = (DefaultTableModel) tblLichSuTimKiem.getModel();
        int selectButtonGroup = selectedButtonGroup();
        String timenow = getCurrentDateTime();

        System.out.println(timenow);
        if (txtTimKiem.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Vui lòng nhập thông tin muốn tìm kiếm");
        }
        if (selectButtonGroup == 1) {
            int selectCbbNhanVien = cbbSearchByNhanVien.getSelectedIndex();
            ArrayList<NHAN_VIEN_DTO> arrNhanVien = new ArrayList<NHAN_VIEN_DTO>();
            arrNhanVien = nhan_Vien_BUS.getAllNhanVien();

            if (selectCbbNhanVien == 0) {
                int start = 0;
                for (NHAN_VIEN_DTO obj : arrNhanVien) {
                    if (obj.getHO_TEN().toLowerCase().contains(txtTimKiem.getText().toLowerCase().trim())) {
                        Object[] newrow = { start + 1, obj.getHO_TEN(), obj.getMA_NV(), "0" + obj.getSDT() };
                        model.addRow(newrow);
                        start++;
                    }
                }
                if (start == 0) {
                    JOptionPane.showMessageDialog(rootPane, "Không tìm thấy");
                }
            } else if (selectCbbNhanVien == 1) {
                int start = 0;
                for (NHAN_VIEN_DTO obj : arrNhanVien) {
                    if (obj.getMA_NV().toLowerCase().contains(txtTimKiem.getText().toLowerCase().trim())) {
                        Object[] newrow = { start + 1, obj.getHO_TEN(), obj.getMA_NV(), "0" + obj.getSDT() };
                        model.addRow(newrow);
                        start++;
                    }
                }
                if (start == 0) {
                    JOptionPane.showMessageDialog(rootPane, "Không tìm thấy");
                }
            } else if (selectCbbNhanVien == 2) {
                int start = 0;
                for (NHAN_VIEN_DTO obj : arrNhanVien) {
                    if (String.valueOf("0" + obj.getSDT()).contains(txtTimKiem.getText().trim())) {
                        Object[] newrow = { start + 1, obj.getHO_TEN(), obj.getMA_NV(), "0" + obj.getSDT() };
                        model.addRow(newrow);
                        start++;
                    }
                }
                if (start == 0) {
                    JOptionPane.showMessageDialog(rootPane, "Không tìm thấy");
                }
            }

            Object[] newrow = { dem + 1, timenow, "Nhân Viên", cbbSearchByNhanVien.getSelectedItem(),
                    txtTimKiem.getText() };
            modelLichSuTimKiem.addRow(newrow);
            dem++;
        } else if (selectButtonGroup == 2) {
            int selectCbbXe = cbbSearchByXe.getSelectedIndex();
            ArrayList<XE_MAY_DTO> dataXe = new ArrayList<XE_MAY_DTO>();
            dataXe = xe_MAY_BUS.getAllXeMay();
            if (selectCbbXe == 0) {
                int start = 0;
                for (int i = 0; i < dataXe.size(); i++) {
                    if (dataXe.get(i).getTEN_XE().toLowerCase().contains(txtTimKiem.getText().toLowerCase().trim())) {
                        Object[] newrow = { start + 1, dataXe.get(i).getTEN_XE(), dataXe.get(i).getMA_XE(),
                                dataXe.get(i).getGIA() };
                        model.addRow(newrow);
                        start++;
                    }
                }
                if (start == 0) {
                    JOptionPane.showMessageDialog(rootPane, "Không tìm thấy");
                }
            } else if (selectCbbXe == 1) {
                int start = 0;
                for (int i = 0; i < dataXe.size(); i++) {
                    if (dataXe.get(i).getMA_XE().toLowerCase().contains(txtTimKiem.getText().toLowerCase().trim())) {
                        Object[] newrow = { start + 1, dataXe.get(i).getTEN_XE(), dataXe.get(i).getMA_XE(),
                                dataXe.get(i).getGIA() };
                        model.addRow(newrow);
                        start++;
                    }
                }
                if (start == 0) {
                    JOptionPane.showMessageDialog(rootPane, "Không tìm thấy");
                }
            } else if (selectCbbXe == 2) {
                
               try {
                int start = 0;
                
                for (int i = 0; i < dataXe.size(); i++) {
                    if (dataXe.get(i).getGIA() == Long.parseLong(txtTimKiem.getText())) {
                        Object[] newrow = { start + 1, dataXe.get(i).getTEN_XE(), dataXe.get(i).getMA_XE(),
                                dataXe.get(i).getGIA() };
                        model.addRow(newrow);
                        start++;
                    }
                }
                if (start == 0) {
                    JOptionPane.showMessageDialog(rootPane, "Không tìm thấy");
                }
               } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Giá nhập phải là số !");

               }
               
               
                
            
            }
            Object[] newrow = { dem + 1,timenow, "Xe", cbbSearchByXe.getSelectedItem(), txtTimKiem.getText() };
            modelLichSuTimKiem.addRow(newrow);
            dem++;
        } else if (selectButtonGroup == 3) {
            int selectCbbKhachHang = cbbSearchByKhachHang.getSelectedIndex();
            ArrayList<KHACH_HANG_DTO> arrKhachHang = new ArrayList<KHACH_HANG_DTO>();
            arrKhachHang = khach_Hang_BUS.getALLKhachHang();
            if (selectCbbKhachHang == 0) {
                int start = 0;
                for (KHACH_HANG_DTO obj : arrKhachHang) {
                    if (obj.getMA_KH().toLowerCase().contains(txtTimKiem.getText().toLowerCase().trim())) {
                        Object[] newrow = { start + 1, obj.getMA_KH(), obj.getTEN_KH(), "0" + obj.getSDT() };
                        model.addRow(newrow);
                        start++;
                    }
                }
                if (start == 0) {
                    JOptionPane.showMessageDialog(rootPane, "Không tìm thấy");
                }
            } else if (selectCbbKhachHang == 1) {
                int start = 0;
                for (KHACH_HANG_DTO obj : arrKhachHang) {
                    if (obj.getTEN_KH().toLowerCase().contains(txtTimKiem.getText().toLowerCase().trim())) {
                        Object[] newrow = { start + 1, obj.getMA_KH(), obj.getTEN_KH(), "0" + obj.getSDT() };
                        model.addRow(newrow);
                        start++;
                    }
                }
                if (start == 0) {
                    JOptionPane.showMessageDialog(rootPane, "Không tìm thấy");
                }
            } else if (selectCbbKhachHang == 2) {
                int start = 0;
                for (KHACH_HANG_DTO obj : arrKhachHang) {
                    if (String.valueOf("0" + obj.getSDT()).contains(txtTimKiem.getText().trim())) {
                        Object[] newrow = { start + 1, obj.getMA_KH(), obj.getTEN_KH(), "0" + obj.getSDT() };
                        model.addRow(newrow);
                        start++;
                    }
                }
                if (start == 0) {
                    JOptionPane.showMessageDialog(rootPane, "Không tìm thấy");
                }
            }
            Object[] newrow = { dem + 1, timenow, "Khách Hàng", cbbSearchByKhachHang.getSelectedItem(),
                    txtTimKiem.getText() };
            modelLichSuTimKiem.addRow(newrow);
            dem++;
        }

    }

    private void setNameRow(String a, String b, String c, String d) {
        TableColumn column0 = tblKetQuaTimKiem.getColumnModel().getColumn(0); // lấy cột đầu tiên
        TableColumn column1 = tblKetQuaTimKiem.getColumnModel().getColumn(1); // lấy cột đầu tiên
        TableColumn column2 = tblKetQuaTimKiem.getColumnModel().getColumn(2); // lấy cột đầu tiên
        TableColumn column3 = tblKetQuaTimKiem.getColumnModel().getColumn(3);
        clickOnTableHeader(tblKetQuaTimKiem, b);
        column0.setHeaderValue(a);
        column1.setHeaderValue(b);
        column2.setHeaderValue(c);
        column3.setHeaderValue(d);
        DefaultTableModel model = (DefaultTableModel) tblKetQuaTimKiem.getModel();
        model.setColumnIdentifiers(new String[] { a, b, c, d });
    }

    public void clickOnTableHeader(JTable table, String columnName) {
        JTableHeader header = table.getTableHeader();
        TableColumnModel colModel = table.getColumnModel();

        for (int i = 0; i < colModel.getColumnCount(); i++) {
            TableColumn col = colModel.getColumn(i);
            if (columnName.equals(col.getHeaderValue())) {
                // Tạo và kích hoạt sự kiện MouseEvent click
                int columnDistance = header.getDraggedDistance();
                Point columnLocation = new Point(columnDistance, 0);
                MouseEvent click = new MouseEvent(header, MouseEvent.MOUSE_CLICKED, System.currentTimeMillis(), 0,
                        columnLocation.x, columnLocation.y, 1, false);
                header.dispatchEvent(click);

                // Sắp xếp dữ liệu trong bảng theo cột đã chọn
                int viewIndex = table.convertColumnIndexToView(i);
                table.getRowSorter().toggleSortOrder(viewIndex);

                break;
            }
        }
    }

    private void checkSelectButton() {
        int selectButtonGroup = selectedButtonGroup();
        if (selectButtonGroup == 0) {
            JOptionPane.showMessageDialog(rootPane, "Vui lòng chọn 1 trong 3 thuộc tính cần tìm kiếm");
        } else {
            txtTimKiem.setEditable(true);
        }
        if (selectButtonGroup == 1) {
            setNameRow("STT", "Tên Nhân Viên", "Mã Nhân Viên", "SĐT");
            cbbSearchByNhanVien.setEnabled(true);
            cbbSearchByKhachHang.setEnabled(false);
            cbbSearchByXe.setEnabled(false);
        } else if (selectButtonGroup == 2) {
            setNameRow("STT", "Tên Xe", "Mã Xe", "Giá Xe");
            cbbSearchByXe.setEnabled(true);
            cbbSearchByNhanVien.setEnabled(false);
            cbbSearchByKhachHang.setEnabled(false);
        } else if (selectButtonGroup == 3) {
            setNameRow("STT", "Mã Khách Hàng", "Tên Khách Hàng", "SĐT");
            cbbSearchByKhachHang.setEnabled(true);
            cbbSearchByNhanVien.setEnabled(false);
            cbbSearchByXe.setEnabled(false);
        }
    }

    private void start() {
        txtTimKiem.setText("");
        txtTimKiem.setEditable(false);
        cbbSearchByKhachHang.setEnabled(false);
        cbbSearchByKhachHang.setSelectedIndex(0);
        cbbSearchByNhanVien.setEnabled(false);
        cbbSearchByNhanVien.setSelectedIndex(0);
        cbbSearchByXe.setEnabled(false);
        cbbSearchByXe.setSelectedIndex(0);
        buttonGroup1.clearSelection();

    }

    private void cbbSearchByNhanVienActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here
        this.dispose();
    }

    private void btnChonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        checkSelectButton();

    }

    private void deleteTable() {
        DefaultTableModel model = (DefaultTableModel) tblKetQuaTimKiem.getModel();
        model.setRowCount(0);
    }

    private void btnNhapLaiTimKiemActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        start();
        deleteTable();
    }

    private void tblLichSuTimKiemMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        if (evt.getClickCount() == 1) {
            JTable target = (JTable) evt.getSource();
            int row = target.getSelectedRow(); // lấy chỉ số dòng được chọn

            txtTimKiem.setText((String) tblLichSuTimKiem.getValueAt(row, 4));
            String radioButtonLichSuTimKiem = (String) tblLichSuTimKiem.getValueAt(row, 2);
            if (radioButtonLichSuTimKiem.equalsIgnoreCase("Nhân Viên")) {
                radiobtnNhanVien.setSelected(true);
                for (int i = 0; i < cbbSearchByNhanVien.getItemCount(); i++) {
                    if (cbbSearchByNhanVien.getItemAt(i).equals(tblLichSuTimKiem.getValueAt(row, 3))) {
                        cbbSearchByNhanVien.setSelectedIndex(i);
                        cbbSearchByNhanVien.setEnabled(true);
                        cbbSearchByKhachHang.setEnabled(false);
                        cbbSearchByXe.setEnabled(false);
                        break;
                    }
                }
            } else if (radioButtonLichSuTimKiem.equalsIgnoreCase("Xe")) {
                radiobtnXe.setSelected(true);
                for (int i = 0; i < cbbSearchByXe.getItemCount(); i++) {
                    if (cbbSearchByXe.getItemAt(i).equals(tblLichSuTimKiem.getValueAt(row, 3))) {
                        cbbSearchByXe.setSelectedIndex(i);
                        cbbSearchByXe.setEnabled(true);
                        cbbSearchByNhanVien.setEnabled(false);
                        cbbSearchByKhachHang.setEnabled(false);
                        break;
                    }
                }
            } else if (radioButtonLichSuTimKiem.equalsIgnoreCase("Khách Hàng")) {
                radiobtnKhachHang.setSelected(true);
                for (int i = 0; i < cbbSearchByKhachHang.getItemCount(); i++) {
                    if (cbbSearchByKhachHang.getItemAt(i).equals(tblLichSuTimKiem.getValueAt(row, 3))) {
                        cbbSearchByKhachHang.setSelectedIndex(i);
                        cbbSearchByKhachHang.setEnabled(true);
                        cbbSearchByNhanVien.setEnabled(false);
                        cbbSearchByXe.setEnabled(false);
                        break;
                    }
                }
            }

            // txtMaBaoHanh.setText((String) tblBaoHanhXe.getValueAt(row, 1));
            //
            // for(int i=0;i<cbbMaXe.getItemCount();i++){
            // if(cbbMaXe.getItemAt(i).equals(tblBaoHanhXe.getValueAt(row, 2))){
            // cbbMaXe.setSelectedIndex(i);
            // break;
            // }
            // }
            //
            //
            // for(int i=0;i<cbbMaKhachHang.getItemCount();i++){
            // if(cbbMaKhachHang.getItemAt(i).equals(tblBaoHanhXe.getValueAt(row, 3))){
            // cbbMaKhachHang.setSelectedIndex(i);
            // break;
            // }
            // }
            //
            // txtNgayNhanXe.setText((String) tblBaoHanhXe.getValueAt(row, 5));
            // txtNgayTraXe.setText((String) tblBaoHanhXe.getValueAt(row, 6));
            // tareMoTa.setText((String) tblBaoHanhXe.getValueAt(row, 7));
            // txtMaNhanVien.setText((String) tblBaoHanhXe.getValueAt(row, 4));

        }
    }

    public static String getCurrentDateTime() {
        LocalDateTime now = LocalDateTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm:ss dd-MM-yyyy");
        return now.format(formatter);
    }

    private void btnXoaLichSuTimKiemActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblLichSuTimKiem.getModel();
        model.setRowCount(0);
        dem = 0;
    }

    private int selectedButtonGroup() {
        if (radiobtnNhanVien.isSelected()) {
            return 1;
        } else if (radiobtnXe.isSelected()) {
            return 2;
        } else if (radiobtnKhachHang.isSelected()) {
            return 3;
        }
        return 0;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TimKiem_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TimKiem_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TimKiem_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TimKiem_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        // </editor-fold>
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TimKiem_GUI().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton btnChon;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnNhapLaiTimKiem;
    private javax.swing.JButton btnTim;
    private javax.swing.JButton btnXoaLichSuTimKiem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbbSearchByKhachHang;
    private javax.swing.JComboBox<String> cbbSearchByNhanVien;
    private javax.swing.JComboBox<String> cbbSearchByXe;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton radiobtnKhachHang;
    private javax.swing.JRadioButton radiobtnNhanVien;
    private javax.swing.JRadioButton radiobtnXe;
    private javax.swing.JTable tblKetQuaTimKiem;
    private javax.swing.JTable tblLichSuTimKiem;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration
}
